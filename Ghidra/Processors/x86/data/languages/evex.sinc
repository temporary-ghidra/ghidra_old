:VMOVDQU64 ZmmReg1, ZmmReg2_m512 is $(EVEX_NONE) & $(EVEX_L512) & $(PRE_F3) & $(VEX_0F) & $(VEX_W1) & kreg=0; byte=0x6F; ZmmReg1 ... & ZmmReg2_m512 [ evexFactor=0x40; ]
{
	local m:64 = ZmmReg2_m512;
	ZmmReg1[0,64] = m[0,64];
	ZmmReg1[64,64] = m[64,64];
	ZmmReg1[128,64] = m[128,64];
	ZmmReg1[192,64] = m[192,64];
	ZmmReg1[256,64] = m[256,64];
	ZmmReg1[320,64] = m[320,64];
	ZmmReg1[384,64] = m[384,64];
	ZmmReg1[448,64] = m[448,64];
}

:VPBROADCASTD ZmmReg1, Rmr32 is $(EVEX_NONE) & $(EVEX_L512) & $(PRE_66) & $(VEX_0F38) & $(VEX_W0) & kreg=0; byte=0x7c; mod=0x3 & Rmr32 & ZmmReg1
{
	ZmmReg1[0,32] = Rmr32;
	ZmmReg1[32,32] = Rmr32;
	ZmmReg1[64,32] = Rmr32;
	ZmmReg1[96,32] = Rmr32;
	ZmmReg1[128,32] = Rmr32;
	ZmmReg1[160,32] = Rmr32;
	ZmmReg1[192,32] = Rmr32;
	ZmmReg1[224,32] = Rmr32;
	ZmmReg1[256,32] = Rmr32;
	ZmmReg1[288,32] = Rmr32;
	ZmmReg1[320,32] = Rmr32;
	ZmmReg1[352,32] = Rmr32;
	ZmmReg1[384,32] = Rmr32;
	ZmmReg1[416,32] = Rmr32;
	ZmmReg1[448,32] = Rmr32;
	ZmmReg1[480,32] = Rmr32;
}

